<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zune2's Blog</title>
    <description>One or more sentences introducing this blog.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 26 Aug 2021 21:44:29 +0900</pubDate>
    <lastBuildDate>Thu, 26 Aug 2021 21:44:29 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>BOJ 2309 일곱 난쟁이</title>
        <description>&lt;div id=&quot;outline-container-orgf00789f&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgf00789f&quot;&gt;일곱 난쟁이&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgf00789f&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;bit를 이용한 power set을 이용해서 반복함&lt;/li&gt;

&lt;li&gt;완전탐색으로 조합순서를 만들기 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org7539c44&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org7539c44&quot;&gt;bitmask 이용 powerset&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org7539c44&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-cpp&quot;&gt;&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;using&lt;/span&gt; &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;namespace&lt;/span&gt; &lt;span style=&quot;color: #8ae234;&quot;&gt;std&lt;/span&gt;;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;a&lt;/span&gt;[9];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;b&lt;/span&gt;[9];

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;argc&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;char&lt;/span&gt;* &lt;span style=&quot;color: #ff6347;&quot;&gt;argv&lt;/span&gt;[])
{
    freopen(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;input.txt&quot;&lt;/span&gt;, &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;r&quot;&lt;/span&gt;, stdin);
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;9;i++) {
        scanf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;a[i]);
    }
    sort(a, a+9);
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;(1&amp;lt;&amp;lt;9);i++) {

        &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;sum&lt;/span&gt; = 0;
        &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;cnt&lt;/span&gt; = 0;
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;j&lt;/span&gt;=0;j&amp;lt;9;j++) {
            &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (i &amp;amp; (1&amp;lt;&amp;lt;j)) {
                sum += a[j]; 
                cnt += 1;
            }
        }

        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (cnt == 7 &amp;amp;&amp;amp; sum == 100) {
            &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;j&lt;/span&gt;=0;j&amp;lt;9;j++) {
                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (i &amp;amp; (1&amp;lt;&amp;lt;j)) {
                    printf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, a[j]);
                }
            }
            &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;goto&lt;/span&gt; &lt;span style=&quot;color: #8ae234;&quot;&gt;exit&lt;/span&gt;;
        }
    } 
&lt;span style=&quot;color: #8ae234;&quot;&gt;exit&lt;/span&gt;: 
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org58d0aaf&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org58d0aaf&quot;&gt;완전탐색 + quicksort 구현&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org58d0aaf&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-cpp&quot;&gt;&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;a&lt;/span&gt;[9];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;b&lt;/span&gt;[9];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;visit&lt;/span&gt;[9];

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;ans&lt;/span&gt; = 0;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;partition&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;a&lt;/span&gt;[], &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;left&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;right&lt;/span&gt;)
{
        &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;pivot&lt;/span&gt; = left;
        &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt; = left-1;
        &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;j&lt;/span&gt; = right+1;

        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;while&lt;/span&gt;(1)
        {
                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;do&lt;/span&gt; {
                        i++;
                } &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;while&lt;/span&gt; (a[i] &amp;lt; a[pivot]);

                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;do&lt;/span&gt; {
                        j--;
                } &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;while&lt;/span&gt; (a[j] &amp;gt; a[pivot]);

                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (i&amp;gt;=j)       &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; j;

                &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;t&lt;/span&gt; = a[i];
                a[i] = a[j];
                a[j] = t;
        }
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; j;
}

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;quicksort&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;a&lt;/span&gt;[], &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;left&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;right&lt;/span&gt;)
{
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (left &amp;lt; right) {
                &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;p&lt;/span&gt; = partition(a, left, right);
                quicksort(a, left, p);
                quicksort(a, p+1, right);
        }
}

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;bt&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;k&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;sum&lt;/span&gt;) {
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; ( ans ) &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; ( sum &amp;gt; 100) &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (7 == k) {
                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (sum == 100) {
                        quicksort(b, 0, 6);
                        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0; i&amp;lt;7;i++) {
                                printf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, b[i]);
                        }
                        ans = 1;
                }
                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
        }

        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;9;i++) {
                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (visit[i] == 0) {
                        visit[i] = 1;
                        b[k] = a[i];
                        bt(k+1, sum+a[i]);
                        visit[i] = 0;

                }
        }
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
}

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;argc&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;char&lt;/span&gt;* &lt;span style=&quot;color: #ff6347;&quot;&gt;argv&lt;/span&gt;[])
{
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;9;i++) {
                scanf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;a[i]);
        }
        bt(0, 0);
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7938b0c&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org7938b0c&quot;&gt;powerset이용 bactracking + bound이용 최적화&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org7938b0c&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;powerset을 구하는 bactracking코드&lt;/li&gt;
&lt;li&gt;100보다 크면 제외하기&lt;/li&gt;
&lt;li&gt;앞으로 나올값과 현재값을 더했을때 100이 될 가능성이 없으면 제외&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-cpp&quot;&gt;&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;using&lt;/span&gt; &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;namespace&lt;/span&gt; &lt;span style=&quot;color: #8ae234;&quot;&gt;std&lt;/span&gt;;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;a&lt;/span&gt;[9];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;b&lt;/span&gt;[9];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;run&lt;/span&gt;;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;f&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;idx&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;sum&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;remaining&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;cnt&lt;/span&gt;)
{
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (run == 0) &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt;;
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (sum &amp;gt; 100) &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt;;  &lt;span style=&quot;color: #888a85;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #888a85;&quot;&gt;100&amp;#48372;&amp;#45796; &amp;#53356;&amp;#47732;, &amp;#51228;&amp;#50808;&lt;/span&gt;
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (sum + remaining &amp;lt; 100) &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt;;   &lt;span style=&quot;color: #888a85;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #888a85;&quot;&gt;&amp;#54788;&amp;#51116; + &amp;#50526;&amp;#51004;&amp;#47196; &amp;#44032;&amp;#45733;&amp;#54620; &amp;#44050;&amp;#51060; 100&amp;#48372;&amp;#45796; &amp;#51089;&amp;#51004;&amp;#47732; &amp;#51228;&amp;#50808;&lt;/span&gt;

    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (idx == 9) {
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (cnt == 7 &amp;amp;&amp;amp; sum == 100) {
            sort(b, b+9);
            &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;9;i++) {
                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (b[i]) printf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, b[i]);
            }
            run = 0;
        }
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt;;
    }

    b[idx] = 0;
    f(idx+1, sum, remaining, cnt);

    b[idx] = a[idx];
    f(idx+1, sum + a[idx], remaining - a[idx], cnt + 1);
}

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;argc&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;char&lt;/span&gt;* &lt;span style=&quot;color: #ff6347;&quot;&gt;argv&lt;/span&gt;[])
{
    &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;sum&lt;/span&gt; = 0;
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;9;i++) {
        scanf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;a[i]);
        sum += a[i];
    }

    run = 1;
    f(0, 0, sum, 0);
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org2f2cda3&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2f2cda3&quot;&gt;&lt;span class=&quot;todo TODO&quot;&gt;TODO&lt;/span&gt; 두수를 뺐을 때, 100이 되게하는 목록 만들기&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org2f2cda3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;이중 loop에서 두 숫자 x, y를 구함&lt;/li&gt;
&lt;li&gt;sum - x - y == 100이면, 전체 목록에서 x, y를 제거하고 출력하기&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgdbf5420&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgdbf5420&quot;&gt;참고자료&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgdbf5420&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://mygumi.tistory.com/361&quot;&gt;비트마스크(BitMask) 는 무엇인가?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgb8e8367&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgb8e8367&quot;&gt;문제 링크&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgb8e8367&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2309&quot;&gt;https://www.acmicpc.net/problem/2309&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 23 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/boj-2309</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/boj-2309</guid>
        
        <category>완전탐색</category>
        
        <category>Bitmask</category>
        
        
      </item>
    
      <item>
        <title>vim에서 C++14 파일 compile</title>
        <description>&lt;div id=&quot;outline-container-orgcb4f3f5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgcb4f3f5&quot;&gt;사용법&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgcb4f3f5&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;.vimrc에 다음 라인을 넣어준다.&lt;/li&gt;
&lt;li&gt;,bb를 누르면, 빌드를 함&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-vim&quot;&gt;map ,bb &amp;lt;ESC&amp;gt;:!g++ -o %:r % -std=c++1y &amp;lt;CR&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgcf7402d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgcf7402d&quot;&gt;의미&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgcf7402d&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;%가 파일이름 전체를 의미함&lt;/li&gt;
&lt;li&gt;%:r이 extension을 제외한 파일 이름을 의미함&lt;/li&gt;
&lt;li&gt;code.cpp가 %이면, %:r은 code가 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgeaf5bce&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgeaf5bce&quot;&gt;c.vim에서 C_CFlags 변경&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgeaf5bce&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;std=c++14를 붙여줘도 동일한 효과가 난다. (더 편리한 듯)&lt;/li&gt;
&lt;li&gt;F9를 눌러서 실행&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;example&quot;&gt;
let s:C_CFlags                = '-Wall -g -O0 -c -std=c++14'      &quot; compiler flags: compile, don't optimize
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 22 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/vim-cpp14-execution</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/vim-cpp14-execution</guid>
        
        <category>vim</category>
        
        
      </item>
    
      <item>
        <title>OrgMode Tips 정리</title>
        <description>&lt;div id=&quot;outline-container-org5f5dabc&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org5f5dabc&quot;&gt;orgmode 마크업&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org5f5dabc&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org02319cf&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org02319cf&quot;&gt;underscore 뒤 문자가 작아지는 문제&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org02319cf&quot;&gt;
&lt;p&gt;
옵션을 추가해주면 된다.
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
#+OPTIONS: ^:nil
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgf1999cf&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgf1999cf&quot;&gt;C++ 소스코드 추가&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgf1999cf&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
&amp;lt;s 후 TAB 입력 cpp
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org5ce5818&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org5ce5818&quot;&gt;Jekyll github운영&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org5ce5818&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1f87056&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org1f87056&quot;&gt;Jekyll에서 org mode로 page 생성하기&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org1f87056&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
C-c C-e P p      #  (Publish -&amp;gt; Current Project) 
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 22 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/orgmode-tips</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/orgmode-tips</guid>
        
        <category>orgmode</category>
        
        
      </item>
    
      <item>
        <title>A. Way Too Long Word</title>
        <description>&lt;div id=&quot;outline-container-orgb0f8b1f&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgb0f8b1f&quot;&gt;A. A. Way Too Long Words&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgb0f8b1f&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;긴 문자열만 골라서 축약형 문자열을 만드는 문제&lt;/li&gt;
&lt;li&gt;Let's consider a word too long, if its length is strictly more than 10 characters. 
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;10이 넘는 경우만 줄인다. (10을 포함하지 않음)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org2c1b890&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2c1b890&quot;&gt;문제 링크&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org2c1b890&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://codeforces.com/problemset/problem/71/A&quot;&gt;https://codeforces.com/problemset/problem/71/A&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 22 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/cf-71a</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/cf-71a</guid>
        
        <category>CodeForces</category>
        
        
      </item>
    
      <item>
        <title>E - Chain Contestant</title>
        <description>&lt;div id=&quot;outline-container-org44cb8b3&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org44cb8b3&quot;&gt;E - Chain Contestant&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org44cb8b3&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;작성중&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Bit DP를 익히고 다시 볼 것
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org522eb1a&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org522eb1a&quot;&gt;문제 링크&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org522eb1a&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://atcoder.jp/contests/abc215/tasks/abc215_e&quot;&gt;https://atcoder.jp/contests/abc215/tasks/abc215_e&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&quot;outline-container-orgee67bc6&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgee67bc6&quot;&gt;참고자료&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgee67bc6&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://koosaga.com/8&quot;&gt;비트필드와 완전 탐색 최적화 (Bit DP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://justicehui.github.io/hard-algorithm/2019/01/18/bitDP/&quot;&gt;Bit DP란?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mygumi.tistory.com/361&quot;&gt;비트마스크(BitMask) 는 무엇인가?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgdb0f2de&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgdb0f2de&quot;&gt;문제모음&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgdb0f2de&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/workbook/view/3146&quot;&gt;Bitmask+DP 문제집&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 22 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/abc215-e</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/abc215-e</guid>
        
        <category>AtCoder</category>
        
        
      </item>
    
      <item>
        <title>D - Coprime 2</title>
        <description>&lt;div id=&quot;outline-container-org73bd17a&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org73bd17a&quot;&gt;D - Coprime 2&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org73bd17a&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;작성중&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org62d4538&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org62d4538&quot;&gt;용어&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org62d4538&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;서로소(coprime integers)&lt;/li&gt;
&lt;li&gt;GCD(x, y) = 1 의미는 x, y는 공약수(a common divisor)가 없다.&lt;/li&gt;
&lt;li&gt;소인수분해 (prime factorization, factorization in prime factors)&lt;/li&gt;
&lt;li&gt;인수분해 (factorization)&lt;/li&gt;
&lt;li&gt;소인수 (prime factor)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org822b66b&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org822b66b&quot;&gt;Prime Factorization (소인수분해)&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org822b66b&quot;&gt;
&lt;pre class=&quot;example&quot;&gt;
12 = 2 x 2 x 3
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgd938d18&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgd938d18&quot;&gt;접근하기&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgd938d18&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;GCD(x, y) = 1은 서로 소인 수를 의미함&lt;/li&gt;

&lt;li&gt;GCD(x, y) != 1 은 X를 소인수분해 했을 때, 배수가 있음을 의미&lt;/li&gt;

&lt;li&gt;룩업 배열에 인수와 그 배수를 check해주고, 1~M까지 loop에서 남아있는 수를 고르면 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;example&quot;&gt;
a[x] = GCD(A[i], x) != 1 
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org0ad18e8&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org0ad18e8&quot;&gt;풀이&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org0ad18e8&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-cpp&quot;&gt;&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;using&lt;/span&gt; &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;namespace&lt;/span&gt; &lt;span style=&quot;color: #8ae234;&quot;&gt;std&lt;/span&gt;;

&lt;span style=&quot;color: #729fcf;&quot;&gt;#define&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;ARR_SIZE&lt;/span&gt; 100010

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;N&lt;/span&gt;, &lt;span style=&quot;color: #ff6347;&quot;&gt;M&lt;/span&gt;;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;a&lt;/span&gt;[ARR_SIZE];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;fact&lt;/span&gt;[ARR_SIZE];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;fidx&lt;/span&gt;;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;out&lt;/span&gt;[ARR_SIZE];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;idx&lt;/span&gt;;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;pfact&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;num&lt;/span&gt;)
{
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=2;i*i&amp;lt;=num;i++) {
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;while&lt;/span&gt;(num%i==0) {
            num /= i;
            fact[fidx++] = i;
        }
    }  
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (num != 1)
        fact[fidx++] = num;
}

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;argc&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;char&lt;/span&gt;* &lt;span style=&quot;color: #ff6347;&quot;&gt;argv&lt;/span&gt;[])
{
    cin &amp;gt;&amp;gt; N &amp;gt;&amp;gt; M;
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;ARR_SIZE;i++) a[i] = 1;

    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;N;i++) {
        &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;num&lt;/span&gt;;
        cin &amp;gt;&amp;gt; num;

        fidx = 0;
        pfact(num);
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;j&lt;/span&gt;=0;j&amp;lt;fidx;j++) {
            &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt;(a[fact[j]]) {
                &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;k&lt;/span&gt;=fact[j];k&amp;lt;ARR_SIZE;k+=fact[j]) {
                    a[k] = 0;
                }
            }
        }
    }

    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=1;i&amp;lt;=M;i++) {
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (a[i]) out[idx++] = i;        
    }    

    cout &amp;lt;&amp;lt; idx &amp;lt;&amp;lt; endl;
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;idx;i++) {
        cout &amp;lt;&amp;lt; out[i] &amp;lt;&amp;lt; endl;
    }
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orga87d71b&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orga87d71b&quot;&gt;문제 링크/참고자료&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orga87d71b&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://atcoder.jp/contests/abc215/tasks/abc215_d&quot;&gt;https://atcoder.jp/contests/abc215/tasks/abc215_d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.hamayanhamayan.com/entry/2021/08/21/233514&quot;&gt;https://blog.hamayanhamayan.com/entry/2021/08/21/233514&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 22 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/abc215-d-upsolve</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/abc215-d-upsolve</guid>
        
        <category>AtCoder</category>
        
        
      </item>
    
      <item>
        <title>C - One More aab aba baa</title>
        <description>&lt;div id=&quot;outline-container-orgb41cf77&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgb41cf77&quot;&gt;C - One More aab aba baa&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgb41cf77&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;string을 순열로 나열했을 때, K번째를 구하는 문제&lt;/li&gt;
&lt;li&gt;STL의 next_permutation으로도 구할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
sort를 해야 한다는 생각이 잘 안떠올랐던 문제
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org6e52493&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6e52493&quot;&gt;코드&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org6e52493&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-cpp&quot;&gt;&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;char&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;t&lt;/span&gt;[10];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;char&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;s&lt;/span&gt;[10];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;N&lt;/span&gt;;
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;len&lt;/span&gt;;
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;cnt&lt;/span&gt;;
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;table&lt;/span&gt;[26];

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;f&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;k&lt;/span&gt;)
{
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (cnt &amp;gt; N) &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt;;
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (k == len) {
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (cnt++ == N) {
            &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;len;i++) {
                printf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%c&quot;&lt;/span&gt;, t[i]);
            }
            printf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;\n&quot;&lt;/span&gt;);
        }
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt;;
    } 

    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;26;i++) {
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (table[i]) {
            table[i]--;
            t[k] = &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;'a'&lt;/span&gt; + i;
            f(k+1);
            table[i]++;
        }
    }
}

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;argc&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;char&lt;/span&gt;* &lt;span style=&quot;color: #ff6347;&quot;&gt;argv&lt;/span&gt;[])
{
    cnt = 1;
    scanf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%s %d&quot;&lt;/span&gt;, s, &amp;amp;N);
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(len=0;s[len];len++) {
        &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;idx&lt;/span&gt; = s[len] - &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;'a'&lt;/span&gt;;
        table[idx]++;
    }
    f(0);

    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org1bd0335&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org1bd0335&quot;&gt;문제 링크&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org1bd0335&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://atcoder.jp/contests/abc215/tasks/abc215_c&quot;&gt;https://atcoder.jp/contests/abc215/tasks/abc215_c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 22 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/abc215-c-upsolve</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/abc215-c-upsolve</guid>
        
        <category>AtCoder</category>
        
        
      </item>
    
      <item>
        <title>STL set</title>
        <description>&lt;div id=&quot;outline-container-org7dcaf39&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org7dcaf39&quot;&gt;STL set&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org7dcaf39&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;데이터의 중복없이, 순서대로 정렬되어 저장하는 자료구조&lt;/li&gt;
&lt;li&gt;Red Black tree 기반&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org4c94b28&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org4c94b28&quot;&gt;예제&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org4c94b28&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-cpp&quot;&gt;&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;using&lt;/span&gt; &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;namespace&lt;/span&gt; &lt;span style=&quot;color: #8ae234;&quot;&gt;std&lt;/span&gt;;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;argc&lt;/span&gt;, &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;char&lt;/span&gt;* &lt;span style=&quot;color: #ff6347;&quot;&gt;argv&lt;/span&gt;[])
{
    &lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;set&lt;/span&gt; &amp;lt;&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;s&lt;/span&gt;;

    &lt;span style=&quot;color: #888a85;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #888a85;&quot;&gt;for(int i=1;i&amp;lt;=10;i++)&lt;/span&gt;
    s.insert(1);
    s.insert(1);
    s.insert(2);
    s.insert(2);
    s.insert(3);
    s.insert(3);

    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234;&quot;&gt;set&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt;&amp;gt;::&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;iterator&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;it&lt;/span&gt;=s.begin();it!=s.end();it++) {
        cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; endl;
    }
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt; 0;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 21 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/stl-set</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/stl-set</guid>
        
        <category>STL</category>
        
        
      </item>
    
      <item>
        <title>bit shift 예제</title>
        <description>&lt;div id=&quot;outline-container-org8e357d8&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org8e357d8&quot;&gt;bit shift 예제&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org8e357d8&quot;&gt;
&lt;p&gt;
왼쪽으로 시프트 : 2를 곱하는 효과
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 1 &amp;lt;&amp;lt; 0
1
&amp;gt;&amp;gt;&amp;gt; 1 &amp;lt;&amp;lt; 1
2
&amp;gt;&amp;gt;&amp;gt; 1 &amp;lt;&amp;lt; 2
4
&amp;gt;&amp;gt;&amp;gt; 1 &amp;lt;&amp;lt; 3
8
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
오른쪽으로 shift : 2로 나누는 효과
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-python&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 10 &amp;gt;&amp;gt; 1
5
&amp;gt;&amp;gt;&amp;gt; 5 &amp;gt;&amp;gt; 1
2
&amp;gt;&amp;gt;&amp;gt; 2 &amp;gt;&amp;gt; 1
1
&amp;gt;&amp;gt;&amp;gt; 1 &amp;gt;&amp;gt; 1
0
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org1baec13&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org1baec13&quot;&gt;알파벳 A,B,C,D를 bit로 mapping하기&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org1baec13&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-cpp&quot;&gt;1 &amp;lt;&amp;lt; (ch - &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;'A'&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
작은 bit부서 순서대로 set된다.
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
A : 1 &amp;lt;&amp;lt; ( 'A' - 'A')  =  1 &amp;lt;&amp;lt; 0  =  1  =  0001
B : 1 &amp;lt;&amp;lt; ( 'B' - 'A')  =  1 &amp;lt;&amp;lt; 1  =  2  =  0010
C : 1 &amp;lt;&amp;lt; ( 'C' - 'A')  =  1 &amp;lt;&amp;lt; 2  =  4  =  0100
D : 1 &amp;lt;&amp;lt; ( 'D' - 'A')  =  1 &amp;lt;&amp;lt; 3  =  8  =  1000
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 16 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/bit-shift-example</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/bit-shift-example</guid>
        
        <category>coding</category>
        
        
      </item>
    
      <item>
        <title>permutation을 구하는 코드</title>
        <description>&lt;div id=&quot;outline-container-org3a6a009&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org3a6a009&quot;&gt;permutation 구하기&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org3a6a009&quot;&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;3개의 공이 있을 때, 순서를 섞기&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
1, 2, 3이 있다면, 6가지 경우가 생긴다. (3x2x1)
&lt;/p&gt;
&lt;pre class=&quot;example&quot;&gt;
1 2 3
1 3 2
2 1 3
2 3 1
3 1 2
3 2 1
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org1cdfb26&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org1cdfb26&quot;&gt;코드 예제&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org1cdfb26&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-cpp&quot;&gt;&lt;span style=&quot;color: #729fcf;&quot;&gt;#include&lt;/span&gt; &lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;N&lt;/span&gt;;
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;a&lt;/span&gt;[11];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;b&lt;/span&gt;[11];
&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;visit&lt;/span&gt;[11];

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;f&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;k&lt;/span&gt;)
{
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (k == N) {
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;N;i++) {
            printf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d &quot;&lt;/span&gt;, b[i]);
        }
        printf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;\n&quot;&lt;/span&gt;);
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;return&lt;/span&gt;;
    }

    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;N;i++) {
        &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;if&lt;/span&gt; (visit[i] == 0) {
            visit[i] = 1;
            b[k] = a[i];
            f(k+1);
            visit[i] = 0;
        }
    }
}

&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #edd400; font-weight: bold;&quot;&gt;solve&lt;/span&gt;()
{
    scanf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;N);
    &lt;span style=&quot;color: #729fcf; font-weight: bold;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #8ae234; font-weight: bold;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #ff6347;&quot;&gt;i&lt;/span&gt;=0;i&amp;lt;N;i++) {
        scanf(&lt;span style=&quot;color: #ad7fa8; font-style: italic;&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;a[i]);
    }
    f(0);
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 15 Aug 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/archivers/perm-code</link>
        <guid isPermaLink="true">http://localhost:4000/archivers/perm-code</guid>
        
        <category>coding</category>
        
        
      </item>
    
  </channel>
</rss>
