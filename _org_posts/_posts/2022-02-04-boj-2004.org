#+HTML: ---
#+HTML: title: BOJ 2004 조합
#+HTML: tags: 수학
#+HTML: toc: true
#+HTML: toc_sticky: true
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 2004 조합
** 접근하기
#+BEGIN_EXAMPLE
2, 5의 승수를 센다
#+END_EXAMPLE

** 코드 1
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL);
typedef long long ll;
#define INF 1e9

int N, M;

int power2(int num)
{
    int ret = 0;
    while(num >=2) {
        ret += num / 2;
        num = num / 2;
    }
    return ret;
}

int power5(int num)
{
    int ret = 0;
    while(num >=5) {
        ret += num / 5;
        num = num / 5;
    }
    return ret;
}


int main(int argc, char* argv[])
{
    FASTIO
    cin >> N >> M;
    int n1 = power2(N) - power2(N-M) - power2(M);
    int n2 = power5(N) - power5(N-M) - power5(M);
    cout << min(n1, n2) << '\n';
    return 0;
}
#+END_SRC
** 코드 2
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL);
typedef long long ll;
#define INF 1e9

ll N, M;

ll cnt2(ll num)
{
    ll sum = 0;
    for(ll i=2;i<=num;i*=2) {
        sum += num / i;
    }
    return sum;
}

ll cnt5(ll num)
{
    ll sum = 0;
    for(ll i=5;i<=num;i*=5) {
        sum += num / i;
    }
    return sum;
}

int main(int argc, char* argv[])
{
    FASTIO
    cin >> N >> M;
    // N!
    // (N-M)!
    // M!
    ll n1 = cnt2(N) - cnt2(N-M) - cnt2(M);
    ll n2 = cnt5(N) - cnt5(N-M) - cnt5(M);

    cout << min(n1, n2) << '\n'; 
    return 0;
}
#+END_SRC

** 해설 참고
- https://st-lab.tistory.com/166
- https://sihyungyou.github.io/baekjoon-2004/
** 문제 링크
- https://www.acmicpc.net/problem/2004
