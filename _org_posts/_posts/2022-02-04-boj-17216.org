#+HTML: ---
#+HTML: title: BOJ 17216 가장 큰 감소 부분 수열
#+HTML: tags: DP
#+HTML: toc: true
#+HTML: toc_sticky: true
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 17216 가장 큰 감소 부분 수열

** 접근하기
#+BEGIN_EXAMPLE
가장 큰 증가 부분 수열 코드를 반대로 구현
#+END_EXAMPLE

** 코드 2
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL);
typedef long long ll;
#define INF 1e9

int N;
ll a[1010];
ll dp[1010];

int main(int argc, char* argv[])
{
    FASTIO
    cin >> N;
    for(int i=1;i<=N;i++) {
        cin >> a[i];
    }

    for(int i=1;i<=N;i++) {
        dp[i] = a[i];
        for(int j=1;j<=i;j++) {
            if (a[i] < a[j] && dp[i] < dp[j] + a[i]) {
                dp[i] = dp[j] + a[i];
            }
        }
    }

    ll ans = dp[1];
    for(int i=1;i<=N;i++) {
        ans = max(ans, dp[i]);
    }
    cout << ans << '\n';
    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/17216
