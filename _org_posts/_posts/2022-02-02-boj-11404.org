#+HTML: ---
#+HTML: title: BOJ 11404 플로이드
#+HTML: tags: 최단거리
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 11404 플로이드

** 접근하기
#+BEGIN_EXAMPLE
- 플로이드 와샬 알고리즘으로 모든 정점간의 최단거리 구하기
#+END_EXAMPLE

** 코드
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL);
typedef long long ll;
#define INF 1e9
int N;
int M;

int dp[101][101];

int main(int argc, char* argv[])
{
    FASTIO
    freopen("input.txt", "r", stdin);
    cin >> N;
    cin >> M;

    for(int i=1;i<=N;i++) {
        for(int j=1;j<=N;j++) {
            if (i != j) dp[i][j] = INF;
        }
    }

    int p1, p2, cost;
    for(int i=0;i<M;i++) {
        cin >> p1 >> p2 >> cost;
        if(dp[p1][p2] > cost) {
            dp[p1][p2] = cost;
        }
    }

    for(int k=1;k<=N;k++) {
        for(int i=1;i<=N;i++) {
            for(int j=1;j<=N;j++) {
                if (dp[i][j] > dp[i][k] + dp[k][j]) {
                    dp[i][j] = dp[i][k] + dp[k][j];
                }
            }
        }
    }

    for(int i=1;i<=N;i++) {
        for(int j=1;j<=N;j++) {
            if (dp[i][j] == INF)
                cout << 0 << " ";
            else
                cout << dp[i][j] << " ";
        }
        cout << '\n';
    }

    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/11404

** 알고리즘 해설
- http://egloos.zum.com/printf/v/776269
- https://dongdd.tistory.com/107
