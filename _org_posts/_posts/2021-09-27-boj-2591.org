
#+HTML: ---
#+HTML: title: BOJ 2951 숫자카드
#+HTML: tags: DP 경우의수
#+HTML: ---
#+OPTIONS: ^:nil

** 숫자카드
- 경우의 수를 구하는 DP 문제

** 접근하기

- i번째 숫자에서 1자리 숫자를 고르면, dp[i-1]의 경우의 수를 더한다.
- i번재 숫자에서 2자리 숫자를 고른면, dp[i-2]의 경우의 수를 더한다.
- 두자리 숫자에서 10의 자리가 0이 되는 경우는 제외한다.

** 코드
#+BEGIN_SRC cpp
#include <stdio.h>

char str[50];
int dp[50];

int main(int argc, char* argv[])
{
    scanf("%s", str + 1);

    int len = 1;   
    for(;str[len];len++);
    len -= 1; 

    str[0] = '0';
    dp[0] = 1;  
    for(int i=1;i<=len;i++) {

        // 한자리 숫자를 사용하는 경우
        // 0이 아니면 1~9까지의 숫자임
        if (str[i] != '0') dp[i] += dp[i-1];
 
        // 두자리 숫자를 사용하는 경우
        // 34보다 작고, 앞자리수가 0이 아님       
        int num = (str[i-1]-'0')*10 + (str[i]-'0');
        if (num <= 34 && str[i-1] != '0') {
            dp[i] += dp[i-2];
        }
    }
    printf("%d\n", dp[len]); 
    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/2591
