#+HTML: ---
#+HTML: layout: post
#+HTML: title: BOJ 13305 주유소
#+HTML: tags: 그리디
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 13305 주유소
- N개의 도시마다 기름값이 다를때, 주어진 도시간 이동거리를 모두 이동할 때 최소비용
 
** 접근하기
- 기름값이 싼 도시에서 미리 하는게 이익을 최대화 하는 방법
#+BEGIN_EXAMPLE
Case1)
 2 3 1
5 2 4 1

2     ->    min(5) * 2           = 10
3     ->    min(2 , 5) * 3       = 6
1     ->    min(2 , 5, 4) * 1    = 2
                                 = 18
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Case2)
 3 3 4 
1 1 1 1

3     -> min(1) * 3              = 3
3     -> min(1, 1) * 3           = 3 
4     -> min(1, 1, 1) * 4        = 4
                                 = 1
#+END_EXAMPLE

** 코드
#+BEGIN_SRC cpp
#include <cstdio>
#include <algorithm>
using namespace std;

typedef long long ll;
#define MV 1000000010

int N;

ll edge[100010];
ll vertex[100010];

int main(int argc, char* argv[])
{
    scanf("%d", &N);
    for(int i=0;i<N-1;i++) {
        scanf("%lld", &edge[i]);
    }

    for(int i=0;i<N;i++) {
        scanf("%lld", &vertex[i]);
    }    

    ll cost = 0;
    ll minv = MV;
    for(int i=0;i<N;i++) {
        ll togo = edge[i];
        minv = min(minv, vertex[i]);
        cost += (minv * togo);
    }        
    printf("%lld\n", cost);
    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/13305
