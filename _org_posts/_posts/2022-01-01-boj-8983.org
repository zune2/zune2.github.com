#+HTML: ---
#+HTML: title: BOJ 8983 사냥꾼
#+HTML: tags: 이분탐색
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 8983 사냥꾼
- 
** 접근하기
#+BEGIN_EXAMPLE
1. 동물에서 사대를 하나씩 찾아본다.
2. 사대는 y좌표가 0인 x좌표만으로 생각할 수 있음.
3. L보다 동물.y가 더 크면, 사정거리 밖임 -> 걸러내기
4. L - 동물.y = xdiff
   -> 동물.x + xdiff or 동물.x - xdiff
      사이에 발사대가 있으면, 사정거리 안쪽
#+END_EXAMPLE

** 코드 - STL lower bound & upper bound 이용
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;

int M, N, L;	
int a[100010];

int main(int argc, char* argv[])
{
    scanf("%d %d %d", &M, &N, &L);
    for(int i=0;i<M;i++) {
        scanf("%d", &a[i]);
    }
    sort(a, a+M);
    int ans = 0;
    for(int i=0;i<N;i++) {
        int ax, ay;
        scanf("%d %d", &ax, &ay);
        if (ay - L > 0) continue;
        int xdiff = abs(L - ay);
        int is_found = upper_bound(a, a+M, ax + xdiff) - lower_bound(a, a+M, ax - xdiff);
        if (is_found) ans++;
    }
    printf("%d\n", ans);
    return 0;
}
#+END_SRC

** 코드 - 스위핑
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;

int M, N, L;	
int a[100010];

typedef struct Animal {
    int y;
    int x;
} Animal;

Animal animal[100010];

bool comp(Animal& p1, Animal& p2)
{
    if (p1.x == p2.x)
        return p1.y < p2.y;
    else
        return p1.x < p2.x;
}

int main(int argc, char* argv[])
{
    scanf("%d %d %d", &M, &N, &L);
    for(int i=0;i<M;i++) {
        scanf("%d", &a[i]);
    }

    for(int i=0;i<N;i++) {
        int ax, ay;
        scanf("%d %d", &ax, &ay);
        animal[i].x = ax;
        animal[i].y = ay;
    }
    sort(a, a+M);
    sort(animal, animal+N, comp);

    int ans = 0;

    int idx = 0;
    for(int i=0;i<N;i++) {
        while(idx != M-1 && a[idx + 1] <= animal[i].x) {
            idx++;    
        } // a[idx+1] > animal[i].x 조건에서 loop 종료
        // a[idx+1] 사대 오른쪽
	// a[idx] 사대 왼쪽에 있음

        if (abs(a[idx] - animal[i].x) + animal[i].y <= L)
            ans += 1; // 동물기준 왼쪽 발사대
        else if (idx != M-1 && abs(a[idx+1] - animal[i].x) + animal[i].y <= L)
            ans += 1; // 동물기준 오른쪽 발사대			
    }
    printf("%d\n", ans);
    return 0;
}
#+END_SRC

** TODO 코드 - 이분탐색 구현

** 문제 링크
- https://www.acmicpc.net/problem/8983


