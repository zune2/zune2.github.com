#+HTML: ---
#+HTML: title: BOJ 1629 곱셈
#+HTML: tags: 분할정복
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 1629 곱셈
- pow(base, cnt)를 구하기

** 접근하기
- 분할정복으로, 곱셈을 n번하지 않고 구할 수 있음

#+BEGIN_EXAMPLE
2^9 = 2*2*2*2* 2*2*2*2 *2

    = 2^4 * 2^4 * 2

2^4 = 2^2 * 2^2
#+END_EXAMPLE
** 코드
#+BEGIN_SRC cpp
#include <bits/stdc++.h>

typedef long long ll;

ll A, B, C;

ll pow(ll base, ll cnt)
{
    if (cnt == 0) return 1;

    ll tmp = pow(base, cnt/2)%C;
    if (cnt %2 == 1) {
        return (tmp*tmp)%C * base%C;
    } else {
        return (tmp*tmp)%C;
    }
}

int main(int argc, char* argv[])
{
    freopen("input.txt", "r", stdin);
    scanf("%lld %lld %lld", &A, &B, &C);
    printf("%lld\n", pow(A, B) % C);
    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/1629
