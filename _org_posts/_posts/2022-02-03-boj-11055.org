#+HTML: ---
#+HTML: layout: post
#+HTML: title: BOJ 11055 가장 큰 증가 부분 수열
#+HTML: tags: DP
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 11055 가장 큰 증가 부분 수열
- dp로 LIS풀기

** 접근하기
#+BEGIN_EXAMPLE
1 100 2 50 60 3 5 6 7 8

dp[i] : i까지의 가장큰 증가 부분 수열의 합

   1
   1  
   1 100
   1 101
   1 100 2
   1  1  3
   1 100 2 50
   1  1  3 53
   1 100 2 50 60
             113
   1 100 2 50 60 3
   1     3       6
   1 100 2 50 60 3 5
   1     3       6 11
   1 100 2 50 60 3 5 6
   1     3       6 11 17
   1 100 2 50 60 3 5 6 7
...
   1 100 2 50 60 3 5 6 7 8

가장 큰 값은 113
#+END_EXAMPLE
** 코드
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL);
typedef long long ll;
#define INF 1e9

int N;
int a[1010];
int dp[1010];

int main(int argc, char* argv[])
{
    FASTIO
    cin >> N;
    for(int i=1;i<=N;i++) {
        cin >> a[i];
    }

    int ans = a[1];
    for(int i=1;i<=N;i++) {
        dp[i] = a[i];
        for(int j=1;j<=i;j++) {
            if (a[i] > a[j] && dp[i] < dp[j] + a[i]) {
                dp[i] = dp[j] + a[i];
                ans = max(ans, dp[i]);
            }
        }
    }
    cout << ans << '\n';
    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/11055
