#+HTML: ---
#+HTML: title: OrgMode를 이용한 Jekyll 블로그 쓰기
#+HTML: tags: Emacs
#+HTML: toc: true
#+HTML: toc_sticky: true
#+HTML: ---

* org mode를 이용한 블로그 쓰기
- 이 페이지는 emacs org mode로 만들어짐
- 이맥스 에디터 안에서 블로그 글을 모두 작성하고, preview 가능한 구조 구축
- 글이 완성되면 git push를 하면 된다.

** emacs config 내용
#+BEGIN_SRC elisp
(setq org-publish-project-alist
      '(
	("org-site" 
	 ;; Path to your org files.
	 :base-directory "~/work/github/JEKYLLDIR/_org_post/"
	 :base-extension "org"

	 ;; Path to your Jekyll project.
	 :publishing-directory "~/work/github/JEKYLLDIR/"
	 :recursive t
	 :publishing-function org-html-publish-to-html
	 :html-extension "html"
	 :body-only t ;; Only export section between <body> </body>

	 :section-numbers nil
	 :with-toc nil
	 :auto-index nil
	 :auto-preamble nil
	 :body-only t
	 :auto-postamble nil
	 )

	("org-static-site"
	 :base-directory "~/work/github/JEKYLLDIR/_org_post/"
	 :base-extension "css\\|js\\|png\\|jpg\\|gif"
	 :publishing-directory "~/work/JEKYLLDIR/"
	 :recursive t
	 :publishing-function org-publish-attachment
	 )

	("mysite" :components (
	  "org-site"
	  "org-static-site"
	)
      )
    )
)
#+END_SRC

** page마다 front matter 쓰기

맨 위에 다음을 추가한다.

#+BEGIN_EXAMPLE
#+HTML: ---
#+HTML: title: org mode를 이용한 블로그 쓰기
#+HTML: tags: OrgMode
#+HTML: ---
#+END_EXAMPLE

** C++ 소스 쓰기
#+BEGIN_SRC c++

#include <iostream>
using namespace std;

int main(int argc, char* argv[])
{
    cout << "Hello World" << endl;
    return 0;
}

#+END_SRC

** 생성 방법
C-c C-e P x 후 현재 등록된 proejct를 고른다.(org-zune)
** DONE image 추가하기

#+BEGIN_EXAMPLE org
[[../assets/imgs/test.jpeg]]
#+END_EXAMPLE

 [[../assets/imgs/test.jpeg]]

** TODO orgmode로 표 추가하기

| Name | Phone |
|  1   |   2   |


* 참고자료
 - https://www.mfoot.com/blog/2015/11/17/using-org-mode-to-write-jekyll-blogs/
 - https://orgmode.org/worg/org-tutorials/org-jekyll.html
