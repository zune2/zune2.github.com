#+HTML: ---
#+HTML: title: BOJ 11568 민균이의 계략
#+HTML: tags: DP
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 11568 민균이의 계략
- dp로 LIS풀기

** 접근하기
#+BEGIN_EXAMPLE

준민이가 제시해야하는 수열은 순증가여야 할 뿐만 아니라, 원소의 개수가 제일 많은 수열이여야 한다.

LIS(N) -> 최대 길이

#+END_EXAMPLE

** 코드 - DP로 풀이
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL);
typedef long long ll;
#define INF 1e9

#define ARRSIZE 1010

ll N;
ll a[ARRSIZE];
ll dp[ARRSIZE];

int main(int argc, char* argv[])
{
    FASTIO
    cin >> N;
    for(int i=1;i<=N;i++) {
        cin >> a[i];
    }

    for(int i=1;i<=N;i++) {
        dp[i] = 1;
    }

    for(int i=1;i<=N;i++) {
        for(int j=1;j<=i;j++) {
            if (a[i] > a[j] && dp[i] < dp[j] + 1) {
                dp[i] = dp[j] + 1;
            }
        }
    }
    ll ans = dp[1];
    for(int i=1;i<=N;i++) {
        ans = max(ans, dp[i]);
    }

    cout << ans << '\n';
    return 0;
}
#+END_SRC

** TODO 코드 - lower_bound로 풀이

** 문제 링크
- https://www.acmicpc.net/problem/11568
