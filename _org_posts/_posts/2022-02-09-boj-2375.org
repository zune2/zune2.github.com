#+HTML: ---
#+HTML: title: BOJ 2357 농구 골대 세우기
#+HTML: tags: 수학, 중앙값
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 2357 농구 골대 세우기

- X축으로 위치를 늘어놓고 가운데 고르기
- Y축으로 위치를 늘어놓고 가운데 고르기
 - 모든 마을에서 합이 최소화되는 위치임

** 접근하기
#+BEGIN_EXAMPLE
1, 2, 3, 4, 5   N=5일 때의 중앙값은?

1, 2, 3, 4      N=4일 때의 중앙값은? -> (2+3)/2를 해줘야 한다.

하지만, 문제의 조건에서 좌표가 작은쪽을 고르라고 함. -> 중앙값에서 작은쪽 찾기
#+END_EXAMPLE

- 문제의 조건에서 pi가 1000까지여서 100000*1000을 생각했는데, 메모리가 넘침
- 10000001 까지만 해주면 accept가 된다.

** 코드
#+BEGIN_SRC cpp
#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL);
typedef long long ll;
#define INF 1e9

int N;

int x[1000001];
int y[1000001];

int main(int argc, char* argv[])
{
    FASTIO
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    cin >> N;
    
    int p1, p2;
    int cnt;
    int idx=0;
    for(int i=0;i<N;i++) {
        cin >> p1 >> p2 >> cnt;
        for(int j=idx;j<idx+cnt;j++) {
            x[j] = p1;
            y[j] = p2;
        }
        idx += cnt;
    }
    
    sort(x, x+idx);
    sort(y, y+idx);

    // 중앙값
    
    // 1 2 3 4 5 -> 홀수개, N=5
    // (N+1)/2 - 1 => 2
    // 1 2 3 4 -> 짝수개, N=4
    // (N)/2 - 1 => 1

    if (idx %2 != 0) idx += 1;
    cout << x[idx/2 -1] << " " << y[idx/2 -1] << '\n';
    return 0;
}
#+END_SRC

** 해설 참고
- https://boomrabbit.tistory.com/88
** 문제 링크
- https://www.acmicpc.net/problem/2375
