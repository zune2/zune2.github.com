
#+HTML: ---
#+HTML: title: BOJ 2160 그림 비교
#+HTML: tags: 구현 비트연산
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 2160 그림 비교
- 5X7 배열 여러개를 비교해서 가장 차이가 작은 번호쌍을 구하기
** 접근하기

** 코드 - 2차원 배열을 비교
#+BEGIN_SRC cpp
#include <cstdio>
#include <algorithm>

using namespace std;

unsigned int a[51];
int map[51][5][7];

inline void input_one(int idx)
{
    char str[10]; 
    a[idx] = 0;
    for(int i=0;i<5;i++) {
        scanf("%s", str);
        for(int j=0;str[j];j++) {
            if(str[j] == 'X') {
                map[idx][i][j] = 1;
            }
        }
    }
}

int comp(int n1, int n2)
{
    int diff = 0;
    for(int i=0;i<5;i++) {
        for(int j=0;j<7;j++) {
            if (map[n1][i][j] != map[n2][i][j]) diff += 1;
        }
    }
    return diff;
}

int main(int argc, char* argv[])
{
    int N;
    scanf("%d", &N);

    for(int i=0;i<N;i++) {
        input_one(i);
    }
    int ans_cnt = 987654321;
    int pic1 = 0;
    int pic2 = 0;
    for(register int i=0;i<N-1;i++) {
        for(register int j=i+1;j<N;j++) {
            int tmp = comp(i, j);
            if (ans_cnt > tmp) {
                ans_cnt = tmp;
                pic1 = i;
                pic2 = j;
            }
            //printf("%d\n", tmp);
        }
    }
    printf("%d %d\n", pic1+1, pic2+1);
    return 0;
}
#+END_SRC


** 코드 - bit 연산으로 풀이
- 5x7 = 35 35개의 bit로 나타낸 숫자를 이용
- 64 bit로 shift할 때는 1이 아니라 1ULL을 써야 함(unsigned long long)
#+BEGIN_SRC cpp
#include <cstdio>
#include <algorithm>

using namespace std;

unsigned long long a[60];

inline unsigned int count_bit(unsigned long long n)
{
    if (n == 0)
        return 0;
    else
        // if last bit set add 1 else add 0
        return (n & 1ULL) + count_bit(n >> 1ULL);
}

// 5*7 = 35
inline void input_one(int idx)
{
    a[idx] = 0ULL;
    char str[20]; 
    for(int i=0;i<5;i++) {
        scanf("%s", str);
        for(int j=0;j<7;j++) {
            if(str[j] == 'X') {
                a[idx] |= (1ULL << ((7*i) + j));
            }
        }
    }
}

int main(int argc, char* argv[])
{
    int N;
    scanf(" %d", &N);

    for(int i=0;i<N;i++) {
        input_one(i);
    }
    unsigned int ans_cnt = 987654321;
    int pic1 = 0;
    int pic2 = 0;
    for(int i=0;i<N-1;i++) {

        for(int j=i+1;j<N;j++) {
            unsigned int cnt = count_bit(a[i]^a[j]);

            if (ans_cnt > cnt) {
                ans_cnt = cnt;
                pic1 = i;
                pic2 = j;
            }
        }
    }
    printf("%d %d\n", pic1+1, pic2+1);
    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/2160
