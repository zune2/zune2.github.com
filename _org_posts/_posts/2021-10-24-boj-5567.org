#+HTML: ---
#+HTML: title: BOJ 5567 결혼식
#+HTML: tags: DFS
#+HTML: toc: true
#+HTML: toc_sticky: true
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 5567 결혼식

** 접근하기
- DFS로 두 단계를 내려간다. 
- BFS에서 depth를 잰다.

** 코드 - DFS
#+BEGIN_SRC cpp
#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

int N, M;
int visit[501];
vector< int > vp[501];
//int ans;

void dfs(int k, int depth)
{
    if (depth >= 2) return;

    for(auto& next:vp[k]) {
        //if (visit[next] == 0) { // 틀림
        visit[next] = 1;
        dfs(next, depth + 1);
        //}
    }
}

int main(int argc, char* argv[])
{
    scanf("%d", &N);
    scanf("%d", &M);

    int p1, p2;
    for(int i=0;i<M;i++) {
        scanf("%d %d", &p1, &p2);
        vp[p1].push_back(p2);
        vp[p2].push_back(p1);
    }
    
    dfs(1, 0);
    int cnt = 0;
    for(int i=2;i<=N;i++) {
        if(visit[i]) cnt++;
    }
    printf("%d\n", cnt);
    return 0;
}
#+END_SRC

** 코드 - BFS
#+BEGIN_EXAMPLE
visit[1] = 1 이면 1번
visit[2] = visit[1] + 1 = 2   // depth 1 : 친구
visit[3] = visit[1] + 1 = 2   // depth 1 : 친구
visit[4] = visit[3] + 1 = 3   // depth 2 : 친구의 친구
visit[5] = visit[4] + 1 = 4
#+END_EXAMPLE
- 2와 3을 세면 된다.

#+BEGIN_SRC cpp
#include <cstdio>
#include <queue>
#include <vector>

using namespace std;

int N;
int M;

vector <int> G[501]; // 인접 리스트로 구현
queue <int> q;      

int idx;
int visit[501];

void bfs(int start)
{
    idx = 0;
    visit[1] = 1;
    q.push(start);       // 1번을 Q에 넣기

    while(!q.empty()) {
        int current = q.front();
        q.pop();

        for(auto& next:G[current]) {
            if (visit[next] == 0) {
                visit[next] = visit[current] + 1;
                q.push(next);
            }     
        }
    }
}

int main(int argc, char* argv[])
{
    scanf("%d", &N);
    scanf("%d", &M);

    for(int i=0;i<M;i++) {
        int p1, p2;    
        scanf("%d %d", &p1, &p2);
        G[p1].push_back(p2);
        G[p2].push_back(p1);
    }

    bfs(1);    
    int cnt = 0;
    for(int i=2;i<=N;i++) {
        if (visit[i] == 2 || visit[i] == 3) {
            cnt += 1;
        }
    }
    printf("%d\n", cnt);
    return 0;
}

#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/5567
