#+HTML: ---
#+HTML: layout: post
#+HTML: title: E - Sorting Query
#+HTML: tags: AtCoder
#+HTML: ---
#+OPTIONS: ^:nil

** TODO E - Sorting Query
- 1 x : A에 맨 뒤에 x추가
- 2 A에서 맨앞 노드 출력
- 3 Sort A 동작
- 우선순위 queue와 deque를 이용해서 풀이
- deque로 맨 앞노드를 출력하는데, sort가 된 이후에는 우선순위Q에서 값을 출력
- 그 사이 1번 명령이 오면, deque에만 추가해도 된다.

** 코드
#+BEGIN_SRC cpp
#include <algorithm>
#include <queue>
using namespace std;

int N;
int a[200010]; // deque를 배열로 구현

int main(int argc, char* argv[])
{
    scanf("%d", &N);
    int num;
    int cmd;
    int tmp;
    int front, rear;
    front = rear = 0;

    priority_queue<int, vector<int>, greater<int>> pq; // 우선순위Q
    for(int i=0;i<N;i++) {
        scanf("%d", &cmd);

        if (cmd == 1) {
            scanf("%d", &num);
            a[rear++] = num;   // deque 맨뒤에 추가
        } else if (cmd == 2) {
            if (!pq.empty()) {   // 이전에 sort가 되었다면,
                tmp = pq.top();  // pq에서 데이터 출력
                pq.pop();
            } else {
                tmp = a[front++]; // 이전에 sort가 안되었다면, deque에서 데이터 출력
            }
            printf("%d\n", tmp);
        } else if (cmd == 3) {
            for(int i=front;i<rear;i++) {  // sort시 deque의 내용을 모두 pq에 이동시킨다.
                pq.push(a[i]);
            }
            front = rear = 0;
        }
    }
    return 0;
}
#+END_SRC

** 문제 링크
- https://atcoder.jp/contests/abc217/tasks/abc217_e


** 참고자료
- [[https://koosaga.com/8][비트필드와 완전 탐색 최적화 (Bit DP)]]
- [[https://justicehui.github.io/hard-algorithm/2019/01/18/bitDP/][Bit DP란?]]
- [[https://mygumi.tistory.com/361][비트마스크(BitMask) 는 무엇인가?]]

