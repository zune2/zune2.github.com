#+HTML: ---
#+HTML: layout: post
#+HTML: title: C - Redorder Cards
#+HTML: tags: AtCoder TODO
#+HTML: ---
#+OPTIONS: ^:nil

** C - Reorder Cards

** 접근하기
- 좌표압축을 묻는 문제
- 입력받은 W, H는 사용하지 않아도 됨  

** 코드1 - STL vector, erase, unique를 이용한 좌표압축

#+BEGIN_SRC cpp
#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

int H, W, N;

int a[100010];
int b[100010];

int main(int argc, char* argv[])
{
    scanf("%d %d %d", &H, &W, &N);
   
    vector<int> va(N); 
    vector<int> vb(N); 
    for(int i=0;i<N;i++) {
        scanf("%d", &a[i]); 
        scanf("%d", &b[i]); 

        va.push_back(a[i]); 
        vb.push_back(b[i]); 
    } 
    sort(va.begin(), va.end());
    va.erase(unique(va.begin(), va.end()), va.end());

    sort(vb.begin(), vb.end());
    vb.erase(unique(vb.begin(), vb.end()), vb.end());

    for(int i=0;i<N;i++) {
        int p1 = lower_bound(va.begin(), va.end(), a[i]) - va.begin();
        int p2 = lower_bound(vb.begin(), vb.end(), b[i]) - vb.begin();
        printf("%d %d\n", p1, p2);
    }
    return 0;
}
#+END_SRC

** 코드2 - 구조체를 이용해서 풀이
#+BEGIN_SRC cpp
#include <cstdio>
#include <algorithm>
using namespace std;

int H, W, N;

typedef struct Node
{
    int val;
    int idx;
    int val2;
} Node;

Node a[100020];
Node b[100020];

bool cmp1(Node& p1, Node& p2)
{
    return (p1.val < p2.val);
}

bool cmp2(Node& p1, Node& p2)
{
    return (p1.idx < p2.idx);
}

int main(int argc, char* argv[])
{
    scanf("%d %d %d", &H, &W, &N);
    
    for(int i=0;i<N;i++) {
        scanf("%d %d", &a[i].val, &b[i].val);
        a[i].idx = i;
        a[i].val2 = 0;

        b[i].idx = i;
        b[i].val2 = 0;
    } 
    sort(a, a+N, cmp1);
    int cnt = 1;
    for(int i=0;i<N;i++) {
        if (i!=0 && a[i-1].val == a[i].val) {
            a[i].val2 = cnt-1;
        } else {
            a[i].val2 = cnt++;
        }
    }

    sort(b, b+N, cmp1);
    cnt = 1;
    for(int i=0;i<N;i++) {
        if (i!=0 && b[i-1].val == b[i].val) {
            b[i].val2 = cnt - 1;
        } else {
            b[i].val2 = cnt++;
        }
    }
    
    sort(a, a+N, cmp2);
    sort(b, b+N, cmp2);
    for(int i=0;i<N;i++) {
        printf("%d %d\n", a[i].val2, b[i].val2);
    }
    return 0;
}
#+END_SRC
** 참고자료
- [[https://jason9319.tistory.com/356][좌표압축기법]]
- [[https://blog.hamayanhamayan.com/entry/2021/08/09/010106][좌표압축 설명]]

** 문제 링크
- https://atcoder.jp/contests/abc213/tasks/abc213_c
