#+HTML: ---
#+HTML: title: BOJ 16561 3의 배수
#+HTML: tags: 최적화
#+HTML: toc: true
#+HTML: toc_sticky: true
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 16561 3의 배수
- 3의 배수 3개를 조합해서 N만드는 경우의 수 구하기

** 접근하기
#+BEGIN_EXAMPLE
a + b + c = N
형태로 3중 loop로 가능

>>> (3000*3000*3000)/(3*3*3)
1000000000 십억만큼 반복 -> 시간초과

#+END_EXAMPLE

#+BEGIN_EXAMPLE
c = N - a - b

c가 3의 배수이어야 함
3보다 같거나 커야 함
N보다 작아야 함
#+END_EXAMPLE

** 시간초과 코드
#+BEGIN_SRC cpp
// 시간초과 풀이
#include <stdio.h>

int N;

int main(int argc, char* argv[])
{
    scanf("%d", &N);
    int ans = 0;
    int cnt = 0;
    for(int i=3;i<=N;i+=3) {
        for(int j=3;j<=N;j+=3) {
            for(int k=3;k<=N;k+=3) {
                ans = i + j + k;  
                if (ans == N) cnt += 1;
            }
        }
    }
    printf("%d\n", cnt);
    return 0;
}
#+END_SRC
** 코드 - 2중 for loop
#+BEGIN_SRC cpp
#include <stdio.h>

int N;
int main(int argc, char* argv[])
{
    scanf("%d", &N);
    int cnt = 0;
    for(int i=3;i<=N;i+=3) {
        for(int j=3;j<=N;j+=3) {
            int c = N - i - j;  
            if (c >= 3 && c%3 == 0 && c < N) cnt += 1;
        }
    }
    printf("%d\n", cnt);
    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/16561
