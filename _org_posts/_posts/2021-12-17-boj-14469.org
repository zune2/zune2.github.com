#+HTML: ---
#+HTML: title: BOJ 14469 소가 길을 건너간 이유 3
#+HTML: tags: STL
#+HTML: toc: true
#+HTML: toc_sticky: true
#+HTML: ---
#+OPTIONS: ^:nil

** BOJ 14469 소가 길을 건너간 이유 3
- 소가 순서대로 길을 건너야함
- 앞의 소가 모두 건널때까지 기다려야 함

** 접근하기
- 앞의 끝시간 > 지금의 시작시간일 때를 찾아서 뒤로 미루는 코드 생각하기 

** 코드 - 구조체 이용
#+BEGIN_SRC cpp
// 구조체 s, e이용
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

int N;

typedef struct Node {
    int s;
    int e;
}Node;

bool cmp(const Node& p1, const Node& p2)
{
    return p1.s < p2.s;
}

int main(int argc, char* argv[])
{
    scanf("%d", &N);
    vector<Node> v(N); 
    int s, len;
    for(int i=0;i<N;i++) {
        scanf("%d %d", &s, &len);
        v[i].s = s;
        v[i].e = s + len;
    }
    sort(v.begin(), v.end(), cmp);
    for(int i=1;i<N;i++) {
        int len = v[i].e - v[i].s;
        if (v[i-1].e > v[i].s) {
            v[i].s = v[i-1].e;
            v[i].e = v[i].s + len;
        }
    }
    printf("%d\n", v[N-1].e);

    return 0;
}
#+END_SRC

** 코드 - STL pair 이용
#+BEGIN_SRC cpp
// 구조체 s, e이용
#include <cstdio>
#include <vector>
#include <algorithm>
#include <utility>
using namespace std;

int N;

bool cmp(const pair<int, int>& p1, const pair<int, int>& p2)
{
    return p1.first < p2.first;
}

int main(int argc, char* argv[])
{
    scanf("%d", &N);
    vector<pair<int, int>> v(N); 
    int s, len;
    for(int i=0;i<N;i++) {
        scanf("%d %d", &s, &len);
        v[i].first = s;
        v[i].second = s + len;
    }
    sort(v.begin(), v.end(), cmp);
    for(int i=1;i<N;i++) {
        int len = v[i].second - v[i].first;
        if (v[i-1].second > v[i].first) {
            v[i].first = v[i-1].second;
            v[i].second = v[i].first + len;
        }
    }
    printf("%d\n", v[N-1].second);

    return 0;
}
#+END_SRC

** 문제 링크
- https://www.acmicpc.net/problem/14469
